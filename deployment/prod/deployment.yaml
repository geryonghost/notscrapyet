apiVersion: v1
kind: Namespace
metadata:
  name: notscrapyet

# Postgres DB
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres
  namespace: notscrapyet
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgres
  name: postgres
  namespace: notscrapyet
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres
        imagePullPolicy: "IfNotPresent"
        env:
        - name: POSTGRES_DB
          value: notscrapyet
        - name: POSTGRES_PASSWORD
          value: password123
        volumeMounts:
        - name: "postgres-data-dir"
          mountPath: "/var/lib/postgresql/data"
      volumes:
      - name: "postgres-data-dir"
        persistentVolumeClaim:
          claimName: "postgres"

---
apiVersion: v1
kind: Service
metadata:
   name: postgres
   namespace: notscrapyet
spec:
   type: NodePort
   selector:
      app: postgres
   ports:
      - port: 5432
        protocol: TCP
        targetPort: 5432
        nodePort: 32011
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
   name: notscrapyet
   namespace: notscrapyet
spec:
   replicas: 1
   selector:
      matchLabels:
         app: notscrapyet
   template:
      metadata:
         labels:
            app: notscrapyet
      spec:
         containers:
            - name: notscrapyet
              image: localhost:5000/notscrapyet:0001.0001
              imagePullPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
   name: notscrapyet
   namespace: notscrapyet
spec:
   type: LoadBalancer
   selector:
      app: notscrapyet
   ports:
      - port: 3011
        targetPort: 3011

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/clusterissuer: letsencrypt-prod
    kubernetes.io/ingress.class: "nginx"    
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
  name: notscrapyet
  namespace: notscrapyet
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - notscrapyet.com
    - www.notscrapyet.com
    secretName: www-notscrapyet-com
  rules:
  - host: www.notscrapyet.com
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: notscrapyet
            port:
              number: 3011
